plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp' version '1.8.10-1.0.9'
}

android {

    defaultConfig {
        applicationId "com.baymax.weather.forecast"
        compileSdk 33
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 5
        versionName "3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose = true
        dataBinding = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    namespace 'com.baymax.weather.forecast'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.core:core-ktx:$android_core_version"
    implementation "com.google.android.material:material:$material_design_version"

    //Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "com.airbnb.android:lottie-compose:$lottie_version"
    implementation "androidx.activity:activity-compose:$activity_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    implementation "io.coil-kt:coil-compose:$coil_version"
    implementation "io.github.raamcosta.compose-destinations:core:$compose_nav_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$compose_nav_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Kotlin Android Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Google-Location
    implementation "com.google.android.gms:play-services-location:$location_version"

    // Preference
    implementation "androidx.preference:preference-ktx:$preference_version"

    //Security-Crypto
    implementation "androidx.security:security-crypto:$security_crypto_version"

    //Stetho
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"

    // testing
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
